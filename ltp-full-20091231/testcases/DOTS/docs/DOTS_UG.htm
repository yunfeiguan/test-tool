<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=windows-1252">
<META NAME="Generator" CONTENT="Microsoft Word 97">
<TITLE>dotshowto111</TITLE>
<META NAME="Template" CONTENT="D:\Program Files\Microsoft Office\Office\html.dot">
</HEAD>
<BODY LINK="#0000ff" VLINK="#800080">

<H1 ALIGN="CENTER">Database Opensource Test Suite<BR>
User's Guide</H1>
<P><HR></P>
<P ALIGN="CENTER"><BR>
Version: 1.1.1 <BR>
Owner:&nbsp; <A HREF="mailto:dbarrera@us.ibm.com">David Barrera</A> <BR>
IBM Linux Technology Center <BR>
11501 Burnet Road <BR>
Austin, TX 78758 </P>
<P><HR></P>

<UL>
<LI><A NAME="TOC1"><A HREF="#SEC1">1. Overview</A></A> </LI>

<UL>
<LI><A NAME="TOC2"><A HREF="#SEC2">1.1 DOTS Overview</A></A> </LI>
<LI><A NAME="TOC3"><A HREF="#SEC3">1.2 Environment</A></A> </LI>

<UL>
<LI><A NAME="TOC4"><A HREF="#SEC4">1.2.1 Software Requirements</A></A> </LI>
<LI><A NAME="TOC5"><A HREF="#SEC5">1.2.2 Hardware Requirements</A></A> </LI></UL>
</UL>

<LI><A NAME="TOC6"><A HREF="#SEC6">2. Architecture</A></A> </LI>

<UL>
<LI><A NAME="TOC7"><A HREF="#SEC7">2.1 Component Overview</A></A> </LI>
<LI><A NAME="TOC8"><A HREF="#SEC8">2.2 DOTS Client Components</A></A> </LI>
<LI><A NAME="TOC9"><A HREF="#SEC9">2.3 Performance Monitor Components</A></A> </LI></UL>

<LI><A NAME="TOC10"><A HREF="#SEC10">3. Installation and Configuration</A></A> </LI>

<UL>
<LI><A NAME="TOC11"><A HREF="#SEC11">3.1 DOTS Packaging</A></A> </LI>
<LI><A NAME="TOC12"><A HREF="#SEC12">3.2 Installation</A></A> </LI>
<LI><A NAME="TOC13"><A HREF="#SEC13">3.3 Configuration</A></A> </LI>

<UL>
<LI><A NAME="TOC14"><A HREF="#SEC14">3.3.1 Server Configuration</A></A> </LI>

<UL>
<LI><A NAME="TOC15"><A HREF="#SEC15">3.3.1.1 DB2 Server Configuration</A></A> </LI>
<LI><A NAME="TOC16"><A HREF="#SEC16">3.3.1.2 Oracle Server Configuration</A></A> </LI>
<LI><A NAME="TOC17"><A HREF="#SEC17">3.3.1.3 Sybase Server Configuration</A></A> </LI>
<LI><A NAME="TOC60"><A HREF="#SEC60">3.3.1.4 MySQL Server Configuration</A></A> </LI>
<LI><A NAME="TOC61"><A HREF="#SEC61">3.3.1.5 PostgreSQL Server Configuration</A></A> </LI></UL>

<LI><A NAME="TOC18"><A HREF="#SEC18">3.3.2 Client Configuration</A></A> </LI>

<UL>
<LI><A NAME="TOC19"><A HREF="#SEC19">3.3.2.1 Set environment</A></A> </LI>
<LI><A NAME="TOC20"><A HREF="#SEC20">3.3.2.2 Customize Configuration File </A></A></LI></UL>
</UL>

<LI><A NAME="TOC21"><A HREF="#SEC21">3.4 Running DOTS </A></A></LI>

<UL>
<LI><A NAME="TOC22"><A HREF="#SEC22">3.4.1 Run DOTS client </A></A></LI></UL>
</UL>

<LI><A NAME="TOC23"><A HREF="#SEC23">4. Function Description </A></A></LI>

<UL>
<LI><A NAME="TOC24"><A HREF="#SEC24">4.1 Basic Cases </A></A></LI>

<UL>
<LI><A NAME="TOC25"><A HREF="#SEC25">4.1.1 BTCJ1</A></A> </LI>
<LI><A NAME="TOC26"><A HREF="#SEC26">4.1.2 BTCJ2</A></A> </LI>
<LI><A NAME="TOC27"><A HREF="#SEC27">4.1.3 BTCJ3</A></A> </LI>
<LI><A NAME="TOC28"><A HREF="#SEC28">4.1.4 BTCJ4</A></A> </LI>
<LI><A NAME="TOC29"><A HREF="#SEC29">4.1.5 BTCJ5</A></A> </LI>
<LI><A NAME="TOC30"><A HREF="#SEC30">4.1.6 BTCJ6</A></A> </LI>
<LI><A NAME="TOC31"><A HREF="#SEC31">4.1.7 BTCJ7</A></A> </LI>
<LI><A NAME="TOC32"><A HREF="#SEC32">4.1.8 BTCJ8</A></A> </LI></UL>

<LI><A NAME="TOC33"><A HREF="#SEC33">4.2 Advance Case</A></A> </LI>

<UL>
<LI><A NAME="TOC34"><A HREF="#SEC34">4.2.1 ATCJ1 User Registration/Authentication</A></A> </LI>

<UL>
<LI><A NAME="TOC35"><A HREF="#SEC35">4.2.1.1 Business Scenario</A></A> </LI>
<LI><A NAME="TOC36"><A HREF="#SEC36">4.2.1.2 Database Actions</A></A> </LI>
<LI><A NAME="TOC37"><A HREF="#SEC37">4.2.1.3 Database Schema</A></A> </LI></UL>

<LI><A NAME="TOC38"><A HREF="#SEC38">4.2.2 ATCJ2 On-line Auction</A></A> </LI>

<UL>
<LI><A NAME="TOC39"><A HREF="#SEC39">4.2.2.1 Business Scenario</A></A> </LI>
<LI><A NAME="TOC40"><A HREF="#SEC40">4.2.2.2 Database Actions </A></A></LI>
<LI><A NAME="TOC41"><A HREF="#SEC41">4.2.2.3 Database Schema</A></A> </LI></UL>
</UL>
</UL>

<LI><A NAME="TOC42"><A HREF="#SEC42">5. Q&amp;A</A></A> </LI>
<LI><A NAME="TOC43"><A HREF="#SEC43">6. Warranty Disclaimer Information </A></A></LI>
<LI><A NAME="TOC44"><A HREF="#SEC44">Appendix A. Database Schema</A></A> </LI>

<UL>
<LI><A NAME="TOC45"><A HREF="#SEC45">TABLE1: BASIC1</A></A> </LI>
<LI><A NAME="TOC46"><A HREF="#SEC46">TABLE2: BASIC2</A></A> </LI>
<LI><A NAME="TOC47"><A HREF="#SEC47">TABLE3: BASIC3</A></A> </LI>
<LI><A NAME="TOC48"><A HREF="#SEC48">TABLE4: BASIC4</A></A> </LI>
<LI><A NAME="TOC49"><A HREF="#SEC49">TABLE5: BASIC5</A></A> </LI>
<LI><A NAME="TOC50"><A HREF="#SEC50">TABLE6: BASIC6</A></A> </LI>
<LI><A NAME="TOC51"><A HREF="#SEC51">TABLE7: REGISTRY</A></A> </LI>
<LI><A NAME="TOC52"><A HREF="#SEC52">TABLE8: BID</A></A> </LI>
<LI><A NAME="TOC53"><A HREF="#SEC53">TABLE9: ITEM</A></A> </LI></UL>

<LI><A NAME="TOC54"><A HREF="#SEC54">Appendix B. Configuration File</A></A> </LI>
<LI><A NAME="TOC55"><A HREF="#SEC55">Appendix C. Keyboard Control</A></A> </LI>
<LI><A NAME="TOC56"><A HREF="#SEC56">Appendix D. Output</A></A> </LI>

<UL>
<LI><A NAME="TOC57"><A HREF="#SEC57">D.1 Log File</A></A> </LI>
<LI><A NAME="TOC58"><A HREF="#SEC58">D.2 Error Report</A></A> </LI>
<LI><A NAME="TOC59"><A HREF="#SEC59">D.3 Test Summary</A></A> </LI></UL>
</UL>

<H1><A HREF="#TOC1"><A NAME="SEC1">1. Overview</A></A></H1>
<H2><A HREF="#TOC2"><A NAME="SEC2">1.1 DOTS Overview</A></A></H2>
<P>Database Opensource Test Suite (DOTS) is a set of test cases designed for the purpose of stress testing and long run testing on database systems to measure database performance and reliability. It has two kinds of test cases - Basic Cases and Advanced Cases. The primary goal of Basic Cases is stress and long run database testing; the secondary goal is 100% JDBC API coverage. There are 8 test cases written in Java to cover JDBC API under the Basic Cases category. The goal of the Advanced Cases is modeling <I>real-world</I> business logic, stress and long run testing on database systems. There are 2 test cases written in Java under the Advanced Cases category. </P>
<H2><A HREF="#TOC3"><A NAME="SEC3">1.2 Environment</A></A></H2>
<H3><A HREF="#TOC4"><A NAME="SEC4"><FONT SIZE=5>1.2.1 Software Requirements</FONT></A></A></H3>
<TABLE BORDER CELLSPACING=1 WIDTH=624>
<TR><TD WIDTH="25%" VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">&nbsp;</TD>
<TD WIDTH="40%" VALIGN="TOP" BGCOLOR="#ffffff">
<B><P ALIGN="CENTER">Server </B></TD>
<TD WIDTH="35%" VALIGN="TOP" BGCOLOR="#ffffff">
<B><P ALIGN="CENTER">Client</B></TD>
</TR>
<TR><TD VALIGN="TOP" BGCOLOR="#ffffff">
<B><P>Operating System</B> </TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P>Linux 2.4.4 Kernel</TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P>Linux 2.4.4 Kernel</TD>
</TR>
<TR><TD VALIGN="TOP" ROWSPAN=3 BGCOLOR="#ffffff">
<B><P>Database System </B></TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P>IBM DB2 UDB for Linux Enterprise Edition 7.2</TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P>JDBC Driver: db2jdbc.zip</TD>
</TR>
<TR><TD VALIGN="TOP" BGCOLOR="#ffffff">
<P>Oracle 8i for Linux Enterprise Edition 8.1.7</TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P>JDBC Driver: classes12.zip</TD>
</TR>
<TR><TD VALIGN="TOP" BGCOLOR="#ffffff">
<P>Sybase Adaptive Server for Linux Enterprise Evaluation Edition 12.5</TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P>JDBC Driver: jconn2.jar</TD>
</TR>
<TR><TD VALIGN="TOP" BGCOLOR="#ffffff">
<B><P>Other Softwares</B> </TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P>J2SE 1.3.1 for Linux </TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P>J2SE 1.3.1 for Linux</TD>
</TR>
</TABLE>

<H3><A HREF="#TOC5"><A NAME="SEC5"><FONT SIZE=5>1.2.2 Hardware</FONT> <FONT SIZE=5>Requirements</FONT></A></A></H3>
<TABLE BORDER CELLSPACING=1 WIDTH=620>
<TR><TD WIDTH="27%" VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER"><DIV align="left"><B>Category</DIV></B> </TD>
<TD WIDTH="73%" VALIGN="TOP" BGCOLOR="#ffffff">
<B><P>Requirements</B></TD>
</TR>
<TR><TD VALIGN="TOP" BGCOLOR="#ffffff">
<P>CPU</TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P>700MHz or higher</TD>
</TR>
<TR><TD VALIGN="TOP" BGCOLOR="#ffffff">
<P>Memory</TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P>512MB or higher</TD>
</TR>
<TR><TD VALIGN="TOP" BGCOLOR="#ffffff">
<P>Disk Capacity</TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P>2GB or higher</TD>
</TR>
</TABLE>

<B><P>Notes:</B> </P>
<P>1. DOTS was designed to run on any hardware platform supported by any Linux distribution. It was developed and tested on a 32 bit Intel platform running Linux.<BR>
2. The number of DOTS test cases you can simultaneously run on a test client, will depend on the physical memory available. </P>
<H1><A HREF="#TOC6"><A NAME="SEC6">2. Architecture</A></A></H1>
<H2><A HREF="#TOC7"><A NAME="SEC7">2.1 Component Overview</A></A></H2>
<P>There are two components that make up DOTS. The first component is the DOTS Client that runs on the test client machine. The second component is the Performance Monitor that runs on the test server machine. The DOTS client uses Sockets and JDBC calls to communicate with the Performance Monitor and the database server respectively. Performance Monitor gets system information from the server, such as CPU usage, memory usage, disk I/O, and sends it back to the test client. JDBC calls are used to perform database transactions on the server. </P>
<P>Neither DOTS Client nor the Performance Monitor has any GUI support in the current release. Users can start running test cases from the command line. DOTS Client can run any of the ten test cases. The test environment can be customized by modifying the configuration file. The format of the configuration file can be found in Appendix B. </P>
<H2><A HREF="#TOC8"><A NAME="SEC8">2.2 DOTS Client Components</A></A></H2>
<B><P>DotsClient:</B> DotsClient is the user interface to the DOTS application. When DotsClient is invoked, it instantiates the following objects: DotsConfig, DotsLogging, Keyboard Listener, Performance Client, Summary Writer and Testcase Threads.</P>
<B><P>DotsConfig:</B> DotsConfig stores all the global static variables which are used by most modules.</P>
<B><P>DotsLogging:</B> DotsLogging serves as the gateway to all the logging activities. It writes to the regular log, error log and summary log. Most modules of DotsClient use DotsLogging to write their output. For more details on the log file and log format, please refer to Appendix D.</P>
<B><P>Keyboard Listener:</B> Keyboard Listener reads keyboard input and process it. If the user enters "STOP" from the keyboard, this will set the termination flag in DotsConfig to "true". At this point, the testcase and all its threads will be terminated.</P>
<B><P>Performance Client:</B> Performance Client interacts with the Performance Monitor on the database server. It sends requests to the server, gets the response from the server and saves the data it gets to DotsConfig.</P>
<B><P>Summary Writer:</B> Summary Writer writes a test summary to the summary file at a specified time interval. The interval time between two writes can be set in the configuration file.</P>
<B><P>Test Case Threads:</B> Test Case Thread is an instance of a test case. Each instance of a thread has its own connection to the database server. Several threads may be started to impose enough workload on a given database server. The number of threads started are determined by the combination of the CURRENT_CONNECTIONS, AUTO_MODE and the CPU_TARGET variable in the configuration file. For the detail, please refer to Appendix B. </P>
<H2><A HREF="#TOC9"><A NAME="SEC9">2.3 Performance Monitor Components</A></A></H2>
<B><P>Performance Monitor:</B> Performance Monitor runs on the database server and communicates with the Dots client via sockets. It collects system information and sends it back to the client every five seconds. When Performance Monitor is invoked, it first reads command line parameters and instantiates Performance config, Performance Reader and Connection Sockets. Then it creates a socket and listens to a specified port. </P>
<B><P>Performance Config:</B> Performance Config stores performance data which is provided by Performance Reader.</P>
<B><P>Performance Reader:</B> Performance Reader reads performance data from the database server and saves the data into Performance Config. </P>
<B><P>Connection Sockets:</B> Connection Socket instance is a thread which interact with one specific client. It gets client request and sends the performance data from Performance Config to the client </P>
<H1><A HREF="#TOC10"><A NAME="SEC10">3. Installation and Configuration</A></A></H1>
<H2><A HREF="#TOC11"><A NAME="SEC11">3.1 DOTS Packaging</A></A></H2>
<P>The DOTS package comes in a gzipped tar file and contains five parts: source files (.java suffixes), script files for creating database and tables, sample script files for tuning system and database parameter, configuration file and make file. </P>
<P>After uncompressing the gzipped tar file, a new directory named Dots will be created in the current directory. The structures are as follows: </P>
<P>-Dots/src/: contains the source files.</P>
<BLOCKQUOTE>Dots/src/dots/basecase/: contains source files for the eight basic cases.<BR>
Dots/src/dots/advcase/: contains source files for the two advanced cases.<BR>
Dots/src/dots/framework/: contains source files for the framework.<BR>
Dots/src/dots/perfmon/: contains source files for the performance monitor.</BLOCKQUOTE>
<P>- Dots/scripts/: contains scripts for database operations that are used in the test server machine.</P>
<BLOCKQUOTE>Dots/scripts/createdb_db2: used to create database "testdb" if database server is IBM DB2. <BR>
Dots/scripts/createtable_db2: used to create tables if database server is IBM DB2.<BR>
Dots/scripts/createproc_db2: used to create stored procedures if database server is IBM DB2.<BR>
Dots/scripts/createtable_ora: used to create tables if database server is Oracle.<BR>
Dots/scripts/createproc_ora: used to create stored procedures if database server is Oracle.<BR>
Dots/scripts/createdb_syb: used to creates database "testdb" if database server is Sybase<BR>
Dots/scripts/createtable_syb: used to creates tables if database server is Sybase.<BR>
Dots/scripts/createproc_syb: used to creates stored procedures if database server is Sybase.</BLOCKQUOTE>
<P>- Dots/sample/: contains scripts used to tune Linux system parameter and tune database parameter.</P>
<BLOCKQUOTE>Dots/sample/syscfg: a sample used to tune Linux system parameter.<BR>
Dots/sample/db2cfg: a sample used to tune IBM DB2 database parameter.</BLOCKQUOTE>
<P>- Dots/makefile: make file used to compile the source code.</P>
<P>- Dots/config.ini: configuration file.</P>
<H2><A HREF="#TOC12"><A NAME="SEC12">3.2 Installation</A></A></H2>
<P>The example below assumes that Dots is installed in the /usr/tmp directory on both client and server machines. Dots can be installed in any directory. </P>
<P>1. Uncompress and untar the Dots.tar.gz file on the client test machine. </P>
<I><P>$ tar zxvf Dots.tar.gz </P>
</I><P>Note: Keep the directory structure intact. Compile the source code using JDK 1.3.1 or higher. Make sure that the path to JDK is in the $PATH variable. If not, add it in. </P>
<P>2. Run make to compile the source. Enter the following commands: </P>
<I><P>$cd /usr/tmp/Dots </I><BR>
<I>$make </P>
</I><P>There will be two jar files - Dots.jar and Perfmon.jar and a directory named classes which contains the class files. </P>
<P>3. Copy the Perfmon.jar, scripts/createdb_&lt;dbase&gt;, scripts/createtable_&lt;dbase&gt;, and scripts/createproc_&lt;dbase&gt; to the server test system. </P>
<P>Note: &lt;dbase&gt; is either db2(DB2), ora(Oracle) or syb(Sybase).</P>
<H2><A HREF="#TOC13"><A NAME="SEC13">3.3 Configuration</A></A></H2>
<H3><A HREF="#TOC14"><A NAME="SEC14">3.3.1 Server Configuration</A></A></H3>
<H4><A HREF="#TOC15"><A NAME="SEC15"><FONT SIZE=4>3.3.1.1 DB2 Server Configuration</FONT></A></A></H4>
<P>The following instructions are used for configuring DOTS with IBM DB2: </P>
<P>1. Download and install IBM DB2 UDB for Linux on the server machine. </P>
<P>2. Log in as DB2 user, start the database service. </P>
<I><P>$db2start</P>
</I><P>3. Run the script to create the database and tables. </P>
<I><P>$cd /usr/tmp/Dots/scripts</I><BR>
<I>$./createdb_db2</I> <BR>
<I>$./createtable_db2</I><BR>
<I>$./createproc_db2</I> </P>
<P>Make sure scripts have execute permission.</P>
<P>4. Set JDBC 2.0 environment variables. </P>
<I><P>$cd $DB2_HOME/sqllib/java12 </I><BR>
<I>$. usejdbc2</P>
</I><P>Make sure the above commands execute successfully. If not, execute these commands manually: </P>
<I><P>$export CLASSPATH=$DB2_HOME/sqllib/java12/db2java.zip:/usr/tmp/Dots/Perfmon.jar:$CLASSPATH</I><BR>
<I>$export PATH=$DB2_HOME/sqllib/java12:$PATH</I><BR>
<I>$export LD_LIBRARY_PATH =$DB2_HOME/sqllib/java12:$LD_LIBRARY_PATH</P>
<P>$DB2_HOME</I> represents the home directory of DB2.</P>
<P>5. Start db2 jdbc service. </P>
<I><P>$db2jstrt 8083</P>
</I><P>Note: It is imperative that usejdbc2 gets sourced prior to starting the jdbc service. Port 8083 can be changed if it is taken by other applications. In this case, change the URL in config.ini to the same port number.</P>
<P>6. Start the Performance Monitor on the server machine. </P>
<I><P>$export CLASSPATH=/usr/tmp/Dots/Perfmon.jar:$CLASSPATH</I><BR>
<I>$export PATH=/usr/&lt;JDK version&gt;/bin:$PATH</I><BR>
<I>$java dots.perfmon.PerfMon -port &lt;port number&gt; </P>
</I><P>Note: The recommended port number is 8001. If it is taken, choose another and reflect the changes in the configuration file. The Performance Monitor requires a dedicated session. If for any reason the session is terminated, all test cases running are terminated.</P>
<P>You can retrieve usage with following command: </P>
<I><P>$java dots.perfmon.PerfMon -help or $java dots.perfmon.PerfMon -?</P>
</I><H4><A HREF="#TOC16"><A NAME="SEC16"><FONT SIZE=4>3.3.1.2 Oracle Server Configuration</FONT></A></A></H4>
<P>The following instructions are used for configuring DOTS with Oracle. </P>
<P>1. Download and install ORACLE 8i for Linux on the server.</P>
<P>2. Log in as Oracle system manager and start the Database service</P>
<P>- Open Oracle server: </P>
<I><P>$svrmgrl</I><BR>
<I>svrmgr&gt;connect internal</I><BR>
<I>svrmgr&gt;startup</I><BR>
<I>svrmgr&gt;exit</P>
</I><P>- Open NET8'listener: </P>
<I><P>$lsnrctl</I><BR>
<I>lsn&gt;start</I><BR>
<I>lsn&gt;exit</P>
</I><P>3. Create Database </P>
<P>Log in as Oracle system manager and use <I>Oracle Database Configuration Assistant Tool</I> to create, change or delete a database. </P>
<I><P>$startx<BR>
$cd $ORACLE_HOME/bin</I><BR>
<I>$dbassist</I><BR>
<I>$ORACLE_HOME</I> represents the home directory of Oracle.</P>
<P>Then the Oracle Database Configuration Assistant window will pop up. You can create database following the instructions. The database name is "testdb".</P>
<P>4. Create tables and procedures: </P>
<I><P>$cd /usr/tmp/Dots/scripts</I><BR>
<I>$./createtable_ora</I><BR>
<I>$./createproc_ora</P>
</I><P>Make sure scripts have execute permissions.</P>
<P>5. Start the Performance Monitor on the server machine. </P>
<I><P>$export CLASSPATH=/usr/tmp/Dots/Perfmon.jar:$CLASSPATH</I><BR>
<I>$export PATH=/usr/&lt;JDK version&gt;/bin:$PATH</I><BR>
<I>$java dots.perfmon.PerfMon -port &lt;port number&gt; </P>
</I><P>Note: The recommended port number is 8001. If it is taken, choose another number and reflect the changes in the configuration file. The Performance Monitor requires a dedicated session. If for any reason the session is terminated, all test cases running are terminated.</P>
<P>You can retrieve usage with the following command: </P>
<I><P>$java dots.perfmon.PerfMon -help or $java dots.perfmon.PerfMon -?</P>
</I><H4><A HREF="#TOC17"><A NAME="SEC17"><FONT SIZE=4>3.3.1.3 Sybase Server Configuration</FONT></A></A></H4>
<P>The following instructions are used for configuring DOTS with Sybase. </P>
<P>1. Download and install Sybase Adaptive Server Enterprise Evaluation Version 12.5 for Linux on the server.</P>
<P>2. Log in as Sybase system manager and start the Database service </P>
<I><P>$cd $SYBASE_HOME/ASE/install </I><BR>
<I>$startserver</P>
<P>$SYBASE_HOME</I> represents the home directory of Oracle. </P>
<P>3. Run the script to create the database and tables. </P>
<I><P>$cd /usr/tmp/Dots/scripts</I><BR>
<I>$./createdb_syb</I> # create database<BR>
<I>$./createtable_syb</I> # create tables<BR>
<I>$./createproc_syb</I> # create stored procedures</P>
<P>Make sure scripts have execute permission.</P>
<P>4. Start the Performance Monitor on the server machine. </P>
<I><P>$export CLASSPATH=/usr/tmp/Dots/Perfmon.jar:$CLASSPATH</I><BR>
<I>$export PATH=/usr/&lt;JDK version&gt;/bin:$PATH</I><BR>
<I>$java dots.perfmon.PerfMon -port &lt;port number&gt; </P>
</I><P>Note: The recommended port number is 8001. If it is taken, choose another number and reflect the changes in the configuration file. The Performance Monitor requires a dedicated session. If for any reason, the session is terminated, all the test cases running gets terminated.</P>
<P>You can get usage by using following command: </P>
<I><P>$java dots.perfmon.PerfMon -help or $java dots.perfmon.PerfMon -?</P>
</I><H4><A HREF="#TOC60"><A NAME="SEC60"><FONT SIZE=4>3.3.1.4 MySQL Server Configuration</FONT></A></A></H4>
<P>The following instructions are used for configuring DOTS with MySQL.</P>
<P>1. Download and install MySQL 3.23.36 on the server.</P>
<I><P>$</I>rpm -Uvh mysql-3.23.36-1.i386.rpm<BR>
<I>$</I>rpm -Uvh mysql-server-3.23.36-1.i386.rpm</P>
<P>2. Log in as root and start the Database service</P>
<I><P>$/etc/rc.d/init.d/mysqld start</P>
</I><P>3. Change to the directory which contains the script and run the script to create the database and tables.</P>
<I><P>$mysql &lt; createdb_mysql</I> #create database and grant the user "dots" the privilege to access the database remotely.<BR>
<I>$mysql &lt;createtable_mysql</I> # create tables</P>
<P>Make sure scripts have execute permission.</P>
<P>4. Start the Performance Monitor on the server machine.</P>
<I><P>$export CLASSPATH=/usr/tmp/Dots/Perfmon.jar:$CLASSPATH</I><BR>
<I>$export PATH=/usr/&lt;JDK version&gt;/bin:$PATH</I><BR>
<I>$java dots.perfmon.PerfMon -port &lt;port number&gt; </P>
</I><P>Note: The recommended port number is 8001. If it is taken, choose another number and reflect the changes in the configuration file. The Performance Monitor requires a dedicated session. If for any reason, the session is terminated, all the test cases running gets terminated.</P>
<P>You can get usage by using following command:</P>
<I><P>$java dots.perfmon.PerfMon -help or $java dots.perfmon.PerfMon -?</P>
<P><!-- This is the starting of test --></P>
</I><H4><A HREF="#TOC61"><A NAME="SEC61"><FONT SIZE=4>3.3.1.4 PostgreSQL Server Configuration</FONT></A></A></H4>
<P>The following instructions are used for configuring DOTS with PostgreSQL.</P>
<BLOCKQUOTE>1. Create a linux user account i.e., postgres to own and manage the PostgreSQL database files.</BLOCKQUOTE><DIR>

<PRE>&#9;useradd postgres </PRE>
<BLOCKQUOTE>2. Download and install the following PostgreSQL packages in the given order: </BLOCKQUOTE>
<PRE>
&#9;a) postgresql-7.2.2-1PGDG.i382.rpm 
&#9;b) postgresql-jdbc-7.2.2-1PGDG.i386.rpm
&#9;c) postgresql-libs-7.2.2-1PGDG.i386.rpm
&#9;d) postgresql-odbc-7.2.2-1PGDG.i386.rpm
&#9;e) postgresql-perl-7.2.2-1PGDG.i386.rpm
&#9;f) postgresql-python-7.2.2-1PGDG.i386.rpm
&#9;g) postgresql-server-7.2.2-1PGDG.i386.rpm </PRE>
<BLOCKQUOTE>3. Change the current directory to the home directory of the user postgres (/var/lib/pgsql).<BR>
<BR>
4. Copy the .bash_profile and .bashrc from /etc/skel/ directory. <BR>
<BR>
6. Modify the .bash_profile file: (a) Modify the PATH to PATH=$PATH:$HOME/bin (b) Add the following lines to .bash_profile file:</BLOCKQUOTE>
<PRE>
&#9;&#9;PATH=$PATH:/usr/lib/pgsql
&#9;&#9;export PATH 
&#9;&#9;PGLIB=/usr/lib/pgsql/:/var/lib/pgsql/data 
&#9;&#9;PGDATA=/var/lib/pgsql/data
&#9;&#9;LD_LIBRARY_PATH=/usr/lib/pgsql
&#9;&#9;ENV=$HOME/.bashrc
&#9;&#9;export ENV PGLIB PGDATA LD_LIBRARY_PATH 
&#9;&#9;Also you might have to add the following:
&#9;&#9;  export PATH="bin path of your JDK/SDK":$PATH
&#9;&#9;  export CLASSPATH="path of Dots"/Perfmon.jar:$CLASSPATH </PRE>
<BLOCKQUOTE>7. Execute the command: chown -Rf postgres.postgres /var/lib/pgsql <BR>
<BR>
8. Logout and login again as root <BR>
<BR>
9. su - postgres <BR>
<BR>
10. Execute the command: initdb <BR>
<BR>
11. Edit the pg_hba.conf file in /var/lib/pgsql/data Add the client's ipaddress to connect to database "TESTDB", use the format:</BLOCKQUOTE>
<PRE>
&#9; TYPE DATABASE IP_ADDRESS MASK  AUTH_TYPE</PRE>
<BLOCKQUOTE>For example to allow users from 9.3 network, to connect to any database:</BLOCKQUOTE>
<PRE>
&#9; host&#9;all&#9;9.3.0.0&#9;255.255.0.0&#9;trust&#9;</PRE>
<BLOCKQUOTE>12. Start the server by using the commands: /usr/bin/postmaster -i -D /var/lib/pgsql/data -l logfile start<BR>
To stop the server: /etc/rc.d/init.d/postgresql stop <BR>
<BR>
13. Make sure the following scripts have the execute permission and execute the scripts to create the database and its objects: (i) cd to the Dots/scripts directory (ii) ./createdb_pg (iii) ./createtable_pg (iv) ./createproc_pg <BR>
<BR>
14. Start the Performance Monitor on the server machine:<BR>
java dots.perfmon.PerfMon -port <port number><BR>
You can get usage by using following command:<BR>
java dots.perfmon.PerfMon -help or java dots.perfmon.PerfMon -?<BR>
Note: The recommended port number is 8001. If it is taken, choose another number and reflect the changes in the configuration file. The Performance Monitor requires a dedicated session. If for any reason, the session is terminated, all the test cases running gets terminated.</BLOCKQUOTE></DIR>

<P><!-- This is the end of test --></P>
<H3><A HREF="#TOC18"><A NAME="SEC18">3.3.2 Client Configuration</A></A></H3>
<H4><A HREF="#TOC19"><A NAME="SEC19"><FONT SIZE=4>3.3.2.1 Set environment</FONT></A></A></H4>
<P>Download the JDBC driver from the database vendor's website and update the CLASSPATH variable accordingly. </P>
<P>Install JDK 1.3.1 or higher on the client machine.  Export the path for the java runtime executable.  </P>
<I><P>$export PATH=/path_to_java/bin:$PATH</I> </P>
<P>1. For DB2 </P>
<P>DB2 JDBC driver file is db2java.zip. The driver is in the directory <I>$DB2_HOME/sqllib/java12.</I> Copy the db2java.zip file from the test server machine into the test client's DOTS local directory. Update the CLASSPATH variable with DB2 JDBC driver.</P>
<I><P>$export CLASSPATH=/usr/tmp/db2java.zip:$CLASSPATH</I> </P>
<P>You should also add DOTS client jar files to CLASSPATH</P>
<I><P>$export CLASSPATH=/usr/tmp/Dots/Dots.jar:$CLASSPATH</I> </P>
<P>2. For Oracle: </P>
<P>Oracle JDBC driver file is classes12.zip (on Linux), and can be download it from the Oracle web site. Update the CLASSPATH variable with the Oracle JDBC driver.</P>
<I><P>$export CLASSPATH=usr/tmp/classes12.zip:$CLASSPATH</I> </P>
<P>3. For Sybase: </P>
<P>Sybase JDBC driver file is jconn2.jar. The driver is in the directory <I>$SYBASE_HOME/sqllib/java12.</I> Copy the jconn2.jar file from the test server machine into the test client's DOTS local directory. Update the CLASSPATH variable with Sybase JDBC driver.</P>
<I><P>$export CLASSPATH=/usr/tmp/jconn2.jar:$CLASSPATH</I> </P>
<P><BR>
You should also add DOTS client jar files to CLASSPATH</P>
<I><P>$export CLASSPATH=/usr/tmp/Dots/Dots.jar:$CLASSPATH</I> </P>
<P>4. For MySQL:</P>
<P>MySQL JDBC driver file is mm.mysql-2.0.14. This driver can be downloaded at the web site: https://sourceforge.net/project/showfiles.php?group_id=15923. Unjar the file mm.mysql-2.0.14-you-must-unjar-me.jar and copy the directory mm.mysql-2.0.14 from the test server machine into the test client's DOTS local directory. Update the CLASSPATH variable with MySQL JDBC driver.</P>
<I><P>$export CLASSPATH=/usr/tmp/mm.mysql-2.0.14/:$CLASSPATH</P>
</I><P>Because MySQL 3.23 do not support Stored Procedure, The basic case BTCJ8 cannot run against MySQL.</P>
<P><BR>
You should also add DOTS client jar files to CLASSPATH</P>
<I><P>$export CLASSPATH=/usr/tmp/Dots/Dots.jar:$CLASSPATH</I><BR>
</P>
<P>5. For PostgreSQL: Download and install the package: postgresql-jdbc-7.2.2-1PGDG.i386.rpm. Copy the following files from /usr/share/pgsql to the Dots/pgsql directory:</P>
<PRE>
&#9;jdbc7.1-1.1.jar
&#9;jdbc7.1-1.2.jar
&#9;jdbc7.2dev-1.1.jar</PRE>
<P>Update the CLASSPATH variable with the postgresql JDBC driver.</P>
<PRE>
     export CLASSPATH=$CLASSPATH:/dots/Dots/pgsql/jdbc7.1-1.2.jar:/usr/share/pgsql/jdbc7.1-1.2.jar
&#9;jdbc7.2dev-1.2.jar</PRE>
<P>You should also add DOTS client jar files to <BR>
CLASSPATH</P>
<I><P>$export CLASSPATH=/usr/tmp/Dots/Dots.jar:$CLASSPATH</I> </P>
<H4><A HREF="#TOC20"><A NAME="SEC20"><FONT SIZE=4>3.3.2.2 Customize Configuration File </FONT></A></A></H4>
<P>DOTS client is configured through a text file called the DOTS Configuration File. This file may have any name you desire, but the default is config.ini. User can edit configuration file to customize working environments for DOTS. Various parameters are provided for user to control how test cases in DOTS are running against database systems. Please refer to Appendix B for details. </P>
<H2><A HREF="#TOC21"><A NAME="SEC21">3.4 Running DOTS </A></A></H2>
<P>Prior to running any of the DOTS test cases, it is imperative that the Performance Monitor and the Database Services have been started in the test server machine.</P>
<H3><A HREF="#TOC22"><A NAME="SEC22">3.4.1 Run DOTS client </A></A></H3>
<P>1. Log in as the user that has execution authority for java.</P>
<P>2. Execute any of the 10 test cases.</P>
<I><P>$java dots.framework.Dots [-config &lt;config file name&gt;] -case &lt;test case name&gt; </P>
</I><P>-config: Allows you to specify the config file. The default is config.ini in the current path. </P>
<P>&lt;config file name&gt; : If file name is specified without a path, the current path is assumed; otherwise specify full name. </P>
<P>-case: Specifies which case to run.</P>
<P>&lt;test case name&gt;: The 8 basic test cases are named BTCJ1 -- BTCJ8; the 2 advanced cases are named ATCJ1 and ATCJ2.</P>
<P>You can retrieve usage with the following command: </P>
<I><P>$java dots.framework.Dots -help or $java dots.framework.Dots -?</I> </P>
<P>3. When running more than one test case, open another session and follow steps 1 and 2. The number of test cases and concurrent connections to the database is influenced on the amount of memory available on both the client and server machines. On a client system with 512 Megabytes of physical memory, a user can run 4 test cases with 25 concurrent connections. There are a couple of test cases, BTCJ7 and ATCJ2 that require a lot of memory. Run only one of these on a single client system.</P>
<H1><A HREF="#TOC23"><A NAME="SEC23">4. Function Description </A></A></H1>
<P>There are 10 test cases (8 Basic Cases and 2 Advance Cases) in DOTS and they are all written in JAVA. Every test case is independent from each other<FONT SIZE=5>.</FONT> </P>
<P>Note: For a function description of Performance Monitor, refer to section 2.3. </P>
<H2><A HREF="#TOC24"><A NAME="SEC24">4.1 Basic Cases </A></A></H2>
<P>There are 8 basic cases in DOTS. The primary goal of these test cases are stress testing and/or long run database testing; the secondary goal is 100% test coverage of the JDBC APIs. </P>
<H3><A HREF="#TOC25"><A NAME="SEC25">4.1.1 BTCJ1</A></A></H3>
<P>The main function of this test case is to get database meta data. Database meta data is the comprehensive information about the database, which includes driver name, driver version, database product name and version, transaction isolation level, columns in the table and so on. The case also retrieves data from table BASIC1, BASIC2, BASIC3. For details about the tables, refer to Appendix A.</P>
<H3><A HREF="#TOC26"><A NAME="SEC26">4.1.2 BTCJ2</A></A></H3>
<P>This test case mainly uses SQL commands to execute database operations such as insert, update, select and delete. This test case uses tables BASIC1, BASIC2, BASIC3. For details about the tables, refer to Appendix A. </P>
<H3><A HREF="#TOC27"><A NAME="SEC27">4.1.3 BTCJ3</A></A></H3>
<P>This test case works like BTCJ2, but sends multiple SQL statements to the database as a unit, or batch. It uses tables BASIC1, BASIC2, BASIC3. For details about the tables, refer to Appendix A. </P>
<H3><A HREF="#TOC28"><A NAME="SEC28">4.1.4 BTCJ4</A></A></H3>
<P>This test case uses PreparedStatement to execute database operations such as insert, update, select and delete.<B><FONT SIZE=4> </B></FONT>The operations are based on a single table. It uses<FONT SIZE=4> </FONT>table BASIC4. For details about the tables, refer to Appendix A. </P>
<H3><A HREF="#TOC29"><A NAME="SEC29">4.1.5 BTCJ5</A></A></H3>
<P>This test case uses PreparedStatement to execute database operations such as insert, update, select and delete. It uses tables BASIC1, BASIC2, BASIC3. For details about the tables, refer to Appendix A. </P>
<H3><A HREF="#TOC30"><A NAME="SEC30">4.1.6 BTCJ6</A></A></H3>
<P>This test case mainly manipulates SQL3 data type CLOB (Character Large Object). It sends CLOBs to the database and accesses SQL CLOB values. This test case uses table BASIC5. For details about the tables, refer to Appendix A. </P>
<H3><A HREF="#TOC31"><A NAME="SEC31">4.1.7 BTCJ7</A></A></H3>
<P>This test case manipulates SQL3 data type BLOB (Binary Large Object). It sends BLOB to the database and accesses an SQL BLOB values. This test case uses table BASIC6. For details about the tables, refer to Appendix A.</P>
<H3><A HREF="#TOC32"><A NAME="SEC32">4.1.8 BTCJ8</A></A></H3>
<P>This test case uses CallableStatement to execute database operations such as insert, update, select and delete. This test case uses tables BASIC1, BASIC2, BASIC3. For details about the tables, refer to Appendix A. </P>
<H2><A HREF="#TOC33"><A NAME="SEC33">4.2 Advance Case</A></A></H2>
<P>There are 2 advanced test cases, which are modeling <I>real-world</I> business logic. </P>
<H3><A HREF="#TOC34"><A NAME="SEC34">4.2.1 ATCJ1 User Registration/Authentication</A></A></H3>
<H4><A HREF="#TOC35"><A NAME="SEC35"><FONT SIZE=4>4.2.1.1 Business Scenario</FONT></A></A></H4>
<P>This test case simulates the database actions of new user registration, updating existing user information and user authentication. </P>
<H4><A HREF="#TOC36"><A NAME="SEC36"><FONT SIZE=4>4.2.1.2 Database Actions</FONT></A></A></H4>

<UL>
<LI>Continuously insert new user registration information into the user information table </LI>
<LI>Continuously check userid/password to validate user login </LI>
<LI>Continuously update user information table for record update </LI></UL>

<H4><A HREF="#TOC37"><A NAME="SEC37"><FONT SIZE=4>4.2.1.3 Database Schema</FONT></A></A></H4>
<P>Table Registry. Details refer to Appendix A.</P>
<H3><A HREF="#TOC38"><A NAME="SEC38">4.2.2 ATCJ2 On-line Auction</A></A></H3>
<H4><A HREF="#TOC39"><A NAME="SEC39"><FONT SIZE=4>4.2.2.1 Business Scenario</FONT></A></A></H4>
<P>This test case simulates the database actions of an online auction scenario. Buyers can search auction items for detailed information, and bid on the items (only for registered users). Sellers (registered users) will add/update items. Everyone can view bid history of one item. </P>
<H4><A HREF="#TOC40"><A NAME="SEC40"><FONT SIZE=4>4.2.2.2 Database Actions </FONT></A></A></H4>

<UL>
<LI>Continuously search auction items for detail information (Buyer) </LI>
<LI>Continuously update auction prices for the items to bid (Buyer) </LI>
<LI>Continuously insert new auction items for sale (Seller) </LI>
<LI>Continuously search all the auction items on which one particular user has transaction with. (Buyer and Seller) </LI></UL>

<H4><A HREF="#TOC41"><A NAME="SEC41"><FONT SIZE=4>4.2.2.3 Database Schema</FONT></A></A></H4>
<P>This test case uses tables REGISTRY, ITEM and BID. For details about the tables, refer to Appendix A. </P>
<H1><A HREF="#TOC42"><A NAME="SEC42">5. Q&amp;A</A></A></H1>
<B><FONT SIZE=4><P>Q1:</B></FONT> Why do I get " Database connection failed" when trying to run one of the test cases?</P>
<B><FONT SIZE=4><P>A1:</B></FONT> Check the following settings: </P>
<P>1. Check if the database and its respective services have been started successfully. </P>
<P>2. Check if JDBC drivers were added to the CLASSPATH variable. </P>
<P>3. Check if the environment variables are correct. </P>
<P>4. For DB2, make sure client and server machine both use the db2 jdbc 2.0 driver. Check such parameters as DriverClass, URL, UserID and Password in configuration file. </P>
<P>Refer to the error file for detail description. </P>
<B><FONT SIZE=4><P>Q2:</B></FONT> When running DOTS in a DB2 environment, there are Java.lang.AbstractMethodErrors. How can this be corrected? </P>
<B><FONT SIZE=4><P>A2:</B></FONT> Both client and server should use the db2 jdbc 2.0 driver. </P>
<P>For the Server side problem, one possible reason is db2 JDBC 2.0 driver file should be in the CLASSPATH. Another possible reason, the JDBC 1.0 driver file is ahead of the JDBC 2.0 in the CLASSPATH variable. </P>
<P>DOTS requires the JDBC 2.0 driver file db2java.zip at the beginning of the CLASSPATH. This rule applies to both test client and test server. </P>
<B><FONT SIZE=4><P>Q3:</B></FONT> There are a lot of DB2 Exceptions in the error files. Some of these exception are: COM.ibm.db2.jdbc.DB2Exception: [IBM][CLI Driver][DB2/LINUX] SQL0803N One or more values in the INSERT statement, UPDATE statement, or foreign key update caused by a DELETE statement are not valid because the primary key, unique constraint or unique index identified by "1" constrains table "DB2INST1.REGISTRY" from having duplicate rows for those columns. SQLSTATE=23505. Why? </P>
<B><P>A3:</B> This problem is not a functional error but a data feed error. The advance cases are trying to simulate user registration and online auction. The key data that gets generated for insert into the database table follows a special rule. However, in a multithread environment, duplicate keys are a normal occurrence. The primary key mechanism in the target table does not allow duplicate keys. Thus, an exception gets generated. For example, in eBay or Yahoo, if you register as "MIKE" and a user MIKE already exists, it will return an error saying MIKE user id is already in use. This error is similar to this type of exception. However, the exceptions are not so numerous unless two or more instances of the same case run against the same database at the same time. </P>
<B><FONT SIZE=4><P>Q4:</B></FONT> When running DOTS for several minutes in a DB2 environment, there are instances of java.lang.OutOfMemoryError in the log file. Why and how to solve? </P>
<B><FONT SIZE=4><P>A4:</B></FONT> This error can be fixed by changing JVM configuration as follows: </P>
<P>java -Xms30m -Xmx500m -Xss9m dots.framework.Dots -config config.ini -case &lt;case name&gt;<BR>
These three parameters are used to modify JVM default setting.<BR>
-Xms30m is to set initial Java heap size to 30M<BR>
-Xmx500m is to set maximum Java heap size to 500M<BR>
-Xss9m is to set thread stack size to 3M .</P>
<P>You can change the number according to client machine's configuration. </P>
<B><FONT SIZE=4><P>Q5:</B></FONT> When running DOTS for several hours in an ORACLE environment, the error, ORA-04031: unable to allocate 4200 bytes of shared memory ("shared pool"," ", "sga heap", "state objects") appears in the error file. How can I fix this problem? </P>
<B><FONT SIZE=4><P>A5:</B></FONT> It is caused by lack of system resource. You can tune the OS parameters and Oracle parameters.<BR>
To tune Linux system parameters, you can log in as root user and run the script in directory <I>/usr/tmp/Dots/sample</I>:</P>
<I><P>$cd /usr/tmp/Dots/sample</I><BR>
<I>$./</I>syscfg </P>
<P>Notes: The file "syscfg" is only a sample. System paremeters depend on the hardware configuration. You can edit "syscfg" to modify the parameters.</P>
<P>To tune Oracle configuration parameters, you should modify the init*.ora file(* represents database name):</P>
<P>Open_cursor = 800<BR>
Db_block_buffers = 45056<BR>
Shared_poor_size = 314572800<BR>
Large_pool_size = 6144000<BR>
Processes = 800<BR>
Log_buffer = 1638400 </P>
<P>Notes: Above parameters are only a sample. The parameters depend on the hardware configuration and Linux system parameters.</P>
<B><FONT SIZE=4><P>Q6:</B></FONT> After running DOTS for several minutes, DB2 crashed. How can I prevent DB2 from crashing? </P>
<B><FONT SIZE=4><P>A6:</B></FONT> DOTS was designed for stress testing and/or long run testing on any given database systems to measure database performance and reliability. The disk space and memory allocated by the database manager are not sufficient to meet DOTS needs. You should tune the DB2 parameters and Linux parameters to achieve maximum performance. </P>
<P>To tune Linux system parameters, log in as root user and enter the commands:<BR>
<I>$cd /usr/tmp/Dots/sample</I><BR>
<I>$./</I>syscfg</P>
<P>To tune the following DB2 parameters, log in as DB2 user and enter the commands: <BR>
<I>$cd /usr/tmp/Dots/sample</I><BR>
<I>$./</I>db2cfg </P>
<P>Notes: The tuning in "syscfg" and "db2cfg" is for reference. The parameters of Linux system depend on the hardware configuration. The parameters of DB2 depend on both hardware configuration and Linux system parameters.</P>
<B><FONT SIZE=4><P>Q7: </B></FONT>When running test case BTCJ3 in an Sybase environment, the error: "com.sybase.jdbc2.jdbc.SybBatchUpdateException: JZ0BE: BatchUpdateException: Error occurred while executing batch statement: Your server command (family id #0, process id #165) encountered a deadlock situation. Please re-run your command " appears in the error file. Why?</P>
<B><FONT SIZE=4><P>A7:</B></FONT><FONT COLOR="#ff00ff"> </FONT>This exception is not a functional error. The occurence of this exception depends on how the database driver executes SQL commands. This exception occurs when Sybase responds to many SQL commands from DOTS client. Oracle and DB2 can handle these situation better. </P>
<B><FONT SIZE=4><P>Q8:</B></FONT> When running DOTS with Sybase, the log: "server 15 task(s) are sleeping waiting for space to become available in the log segment for database tempdb" appears in the Sybase log. How to avoid this?</P>
<B><FONT SIZE=4><P>A8: </B></FONT>You can avoid this problem by enlarging the size of tempdb and dump log automatically. To do this, you should create a separate device and move tempdb to that device following below steps:<BR>
#move tempdb to the device testdb_dev(assume testdb_dev is the device you have created.)<BR>
&gt;use master<BR>
&gt;go<BR>
&gt;alter database tempdb on testdb_dev <BR>
&gt;go<BR>
&gt;use tempdb<BR>
&gt;go<BR>
<BR>
#Add a new segment and extend the segment<BR>
&gt;sp_addsegment tempdb_seg,tempdb,testdb_dev<BR>
&gt;go<BR>
&gt;sp_extendsegment tempdb_seg,tempdb,testdb_dev<BR>
&gt;go<BR>
<BR>
#Dump log automatically<BR>
&gt;create procedure sp_thresholdtempdb as dump transaction tempdb with no_log<BR>
&gt;go<BR>
&gt;sp_addthreshold tempdb,tempdb_seg,150,sp_thresholdtempdb<BR>
&gt;go<BR>
<BR>
But if we do so, we have not found way to delete that device later when we re-run those scripts.</P>
<B><FONT SIZE=4><P>Q9:</B></FONT> Is it necessary to use disk init to initialize a database device if I want to create a very large database for Sybase? </P>
<B><FONT SIZE=4><P>A9:</B></FONT> Yes, it is necessary to use disk init to initialize a database device if you want to create a large database.</P>
<B><FONT SIZE=4><P>Q10: </B></FONT>When running test case BTCJ6 or BTCJ7 on Sybase, we have experienced the error: "[Fri Oct 12 17:08:11 CDT 2001] BTCJ6.populateTable(): com.sybase.jdbc2.jdbc.SybSQLException: The name 'DOC' is illegal in this context. Only constants, constant expressions, or variables allowed here. Column names are illegal." or the error: "[Fri Oct 12 17:08:48 CDT 2001] BTCJ7.populateTable2(): com.sybase.jdbc2.jdbc.SybSQLException: The name 'PHOTO' is illegal in this context. Only constants, constant expressions, or variables allowed here. Column names are illegal." And server's CPU utilization is low.Why?</P>
<B><FONT SIZE=4><P>A10: </B></FONT>BTCJ6 and BTCJ7 are designed to manipulate CLOB and BLOB respectively. Different databases use different implementations to leverage their unique features and strength, these two test cases can run against DB2 and Oracle but not for Sybase.</P>
<B><FONT SIZE=4><P>Q11:</B></FONT> How about the performance of each case? </P>
<B><FONT SIZE=4><P>A11:</B></FONT><FONT COLOR="#ff00ff"> </FONT>Each case's performance depend on the configuration of both client machine and server machine. Below table is for reference:</P>
<P>DOTS Server - IBM eServer x200-52x/PIII 866/1280MB + IBM DB2 UDB for Linux Enterprise Edition 7.2 </P>
<P>DOTS Client - IBM eServer x200-52x/PIII 866/640MB </P>
<TABLE BORDER CELLSPACING=1 WIDTH=599>
<TR><TD WIDTH="13%" VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">DOTS</TD>
<TD WIDTH="30%" VALIGN="TOP">
<P ALIGN="CENTER">Measure Parameters</TD>
<TD WIDTH="6%" VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">BTCJ1</TD>
<TD WIDTH="5%" VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">BTCJ2</TD>
<TD WIDTH="5%" VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">BTCJ3</TD>
<TD WIDTH="6%" VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">BTCJ4</TD>
<TD WIDTH="6%" VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">BTCJ5</TD>
<TD WIDTH="6%" VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">BTCJ6</TD>
<TD WIDTH="6%" VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">BTCJ7</TD>
<TD WIDTH="6%" VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">BTCJ8</TD>
<TD WIDTH="6%" VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">ATCJ1</TD>
<TD WIDTH="6%" VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">ATCJ2</TD>
</TR>
<TR><TD VALIGN="TOP" ROWSPAN=4 BGCOLOR="#ffffff">
<P ALIGN="CENTER">Client resource</TD>
<TD VALIGN="TOP">
<P ALIGN="CENTER">No. of Threads reach CPU target</P>
<P ALIGN="CENTER">~ after stable</TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">19</TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">4</TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">4</TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">3</TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">3</TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">4</TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">14</TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">5</TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">28</TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">23</TD>
</TR>
<TR><TD VALIGN="TOP">
<P ALIGN="CENTER">Total Elapse Time reach CPU Target (min)</TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">54</TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">9</TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">9</TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">10</TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">6</TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">9</TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">39</TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">12</TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">81</TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">66</TD>
</TR>
<TR><TD VALIGN="TOP">
<P ALIGN="CENTER">Used ~ Total Memory after system stable (MB)</TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">103</TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">100</TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">101</TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">150</TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">101</TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">103</TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">108</TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">102</TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">102</TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">104</TD>
</TR>
<TR><TD VALIGN="TOP">
<P ALIGN="CENTER">Used CPU after system stable (%)</TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">35</TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">10</TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">10</TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">10</TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">10</TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">10</TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">94</TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">20</TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">30</TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">90</TD>
</TR>
<TR><TD VALIGN="TOP" ROWSPAN=2 BGCOLOR="#ffffff">
<P ALIGN="CENTER">Server resource</TD>
<TD VALIGN="TOP">
<P ALIGN="CENTER">Used ~ Total Memory after system stable (MB)</TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">533</TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">625</TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">638</TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">568</TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">640</TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">657</TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">635</TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">605</TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">761</TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">750</TD>
</TR>
<TR><TD VALIGN="TOP">
<P ALIGN="CENTER">Used CPU after system stable (%)</TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">80</TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">96</TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">89</TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">89</TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">96</TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">88</TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">88</TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">97</TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">60</TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">43</TD>
</TR>
<TR><TD VALIGN="TOP" ROWSPAN=2 BGCOLOR="#ffffff">
<P ALIGN="CENTER">Remarks</TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">CPU Utilization Target (%)</TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">85</TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">85</TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">85</TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">85</TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">85</TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">85</TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">85</TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">85</TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">85</TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">85</TD>
</TR>
<TR><TD VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">Thread Creation Interval (min)</TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">3</TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">3</TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">3</TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">3</TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">3</TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">3</TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">3</TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">3</TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">3</TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">3</TD>
</TR>
</TABLE>

<P>Before running the case, the resources are as belows: </P>
<TABLE BORDER CELLSPACING=1 CELLPADDING=2 WIDTH=599>
<TR><TD WIDTH="34%" VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">&nbsp;</TD>
<TD WIDTH="30%" VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">Used Memory - Idle</TD>
<TD WIDTH="36%" VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">Used CPU - Idle</TD>
</TR>
<TR><TD VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">DOTS Client Resource</TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">56M</TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">1%</TD>
</TR>
<TR><TD VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">DOTS Server Resource</TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">176M</TD>
<TD VALIGN="TOP" BGCOLOR="#ffffff">
<P ALIGN="CENTER">1%</TD>
</TR>
</TABLE>

<H1><A HREF="#TOC43"><A NAME="SEC43">6. Warranty Disclaimer Information </A></A></H1>
<P>This document is provided on an "AS IS" basis, with no warranties of any kind, including, but not limited to, the implied warranties of merchantibility or fitness for particular purpose. The information contained in this document is subject to change without notice. It shall be the user's responsibility to take all appropriate fail-safe, backup, and other measures to ensure the safe use of the application. The author disclaims any liability for any damages caused by use of the DOTS program or this documentation. <FONT SIZE=5>.</FONT> </P>
<H1><A HREF="#TOC44"><A NAME="SEC44">Appendix A. Database Schema</A></A></H1>
<H2><A HREF="#TOC45"><A NAME="SEC45">TABLE1: BASIC1</A></A></H2>
<TABLE BORDER CELLSPACING=1 CELLPADDING=5 WIDTH=600>
<TR><TD WIDTH="29%" VALIGN="TOP">
<P><COL span="3" width="200">Column Name</TD>
<TD WIDTH="29%" VALIGN="TOP">
<P>Column Type</TD>
<TD WIDTH="29%" VALIGN="TOP">
<P>Column Description</TD>
</TR>
<TR><TD WIDTH="29%" VALIGN="TOP">
<B><P>ID_1</B></TD>
<TD WIDTH="29%" VALIGN="TOP">
<P>CHAR(10) NOT NULL</TD>
<TD WIDTH="29%" VALIGN="TOP">
<P>PRIMARY KEY</TD>
</TR>
<TR><TD WIDTH="29%" VALIGN="TOP">
<P>RND_CHAR</TD>
<TD WIDTH="29%" VALIGN="TOP">
<P>VARCHAR(50)</TD>
<TD WIDTH="29%" VALIGN="TOP">
<P>&nbsp;</TD>
</TR>
<TR><TD WIDTH="29%" VALIGN="TOP">
<P>RND_FLOAT</TD>
<TD WIDTH="29%" VALIGN="TOP">
<P>FLOAT</TD>
<TD WIDTH="29%" VALIGN="TOP">
<P>&nbsp;</TD>
</TR>
</TABLE>

<H2><A HREF="#TOC46"><A NAME="SEC46">TABLE2: BASIC2</A></A></H2>
<TABLE BORDER CELLSPACING=1 CELLPADDING=5 WIDTH=600>
<TR><TD WIDTH="29%" VALIGN="TOP">
<P>Column Name</TD>
<TD WIDTH="38%" VALIGN="TOP">
<P>Column Type</TD>
<TD WIDTH="31%" VALIGN="TOP">
<P>Column Description</TD>
</TR>
<TR><TD VALIGN="TOP">
<B><P>ID_2</B></TD>
<TD VALIGN="TOP">
<P>CHAR(10) NOT NULL</TD>
<TD VALIGN="TOP">
<P>PRIMARY KEY</TD>
</TR>
<TR><TD VALIGN="TOP">
<P>RND_INTEGER</TD>
<TD VALIGN="TOP">
<P>INTERGER</TD>
<TD VALIGN="TOP">
<P>&nbsp;</TD>
</TR>
<TR><TD VALIGN="TOP">
<P>RND_TIME</TD>
<TD VALIGN="TOP">
<P>TIME</TD>
<TD VALIGN="TOP">
<P>&nbsp;</TD>
</TR>
<TR><TD VALIGN="TOP">
<P>RND_TIMESTAMP</TD>
<TD VALIGN="TOP">
<P>TIMESTAMP</TD>
<TD VALIGN="TOP">
<P>&nbsp;</TD>
</TR>
</TABLE>

<H2><A HREF="#TOC47"><A NAME="SEC47">TABLE3: BASIC3</A></A></H2>
<TABLE BORDER CELLSPACING=1 CELLPADDING=5 WIDTH=600>
<TR><TD WIDTH="29%" VALIGN="TOP">
<P>Column Name</TD>
<TD WIDTH="38%" VALIGN="TOP">
<P>Column Type</TD>
<TD WIDTH="31%" VALIGN="TOP">
<P>Column Description</TD>
</TR>
<TR><TD VALIGN="TOP">
<B><P>ID_1</B></TD>
<TD VALIGN="TOP">
<P>CHAR(10) NOT NULL</TD>
<TD VALIGN="TOP">
<P>PRIMARY KEY</TD>
</TR>
<TR><TD VALIGN="TOP">
<B><P>ID_2</B></TD>
<TD VALIGN="TOP">
<P>CHAR(10) NOT NULL</TD>
<TD VALIGN="TOP">
<P>PRIMARY KEY</TD>
</TR>
<TR><TD VALIGN="TOP">
<P>RND_DATE</TD>
<TD VALIGN="TOP">
<P>DATE</TD>
<TD VALIGN="TOP">
<P>&nbsp;</TD>
</TR>
<TR><TD VALIGN="TOP">
<P>RND_INT</TD>
<TD VALIGN="TOP">
<P>INTEGER</TD>
<TD VALIGN="MIDDLE">
<P>&nbsp;</TD>
</TR>
</TABLE>

<H2><A HREF="#TOC48"><A NAME="SEC48">TABLE4: BASIC4</A></A></H2>
<TABLE BORDER CELLSPACING=1 CELLPADDING=5 WIDTH=600>
<TR><TD WIDTH="29%" VALIGN="TOP">
<P>Column Name</TD>
<TD WIDTH="38%" VALIGN="TOP">
<P>Column Type</TD>
<TD WIDTH="31%" VALIGN="TOP">
<P>Column Description</TD>
</TR>
<TR><TD VALIGN="TOP">
<B><P>ID_4</B></TD>
<TD VALIGN="TOP">
<P>CHAR(15) NOT NULL</TD>
<TD VALIGN="TOP">
<P>PRIMARY KEY</TD>
</TR>
<TR><TD VALIGN="TOP">
<P>NAME</TD>
<TD VALIGN="TOP">
<P>VARCHAR(30)</TD>
<TD VALIGN="MIDDLE">
<P>&nbsp;</TD>
</TR>
<TR><TD VALIGN="TOP">
<P>AGE</TD>
<TD VALIGN="TOP">
<P>INTEGER</TD>
<TD VALIGN="MIDDLE">
<P>&nbsp;</TD>
</TR>
<TR><TD VALIGN="TOP">
<P>SALARY</TD>
<TD VALIGN="TOP">
<P>FLOAT</TD>
<TD VALIGN="TOP">
<P>&nbsp;</TD>
</TR>
<TR><TD VALIGN="TOP">
<P>DEPTNO</TD>
<TD VALIGN="TOP">
<P>INTEGER</TD>
<TD VALIGN="MIDDLE">
<P>&nbsp;</TD>
</TR>
</TABLE>

<H2><A HREF="#TOC49"><A NAME="SEC49">TABLE5: BASIC5</A></A></H2>
<TABLE BORDER CELLSPACING=1 CELLPADDING=5 WIDTH=600>
<TR><TD WIDTH="29%" VALIGN="TOP">
<P>Column Name</TD>
<TD WIDTH="38%" VALIGN="TOP">
<P>Column Type</TD>
<TD WIDTH="31%" VALIGN="TOP">
<P>Column Description</TD>
</TR>
<TR><TD VALIGN="TOP">
<B><P>ID_5</B></TD>
<TD VALIGN="TOP">
<P>CHAR(15) NOT NULL</TD>
<TD VALIGN="TOP">
<P>PRIMARY KEY</TD>
</TR>
<TR><TD VALIGN="TOP">
<P>NAME</TD>
<TD VALIGN="TOP">
<P>VARCHAR(30)</TD>
<TD VALIGN="MIDDLE">
<P>&nbsp;</TD>
</TR>
<TR><TD VALIGN="TOP">
<P>AGE</TD>
<TD VALIGN="TOP">
<P>INTEGER</TD>
<TD VALIGN="MIDDLE">
<P>&nbsp;</TD>
</TR>
<TR><TD VALIGN="TOP">
<P>SALARY</TD>
<TD VALIGN="TOP">
<P>FLOAT</TD>
<TD VALIGN="MIDDLE">
<P>&nbsp;</TD>
</TR>
<TR><TD VALIGN="TOP">
<P>DOC</TD>
<TD VALIGN="TOP">
<P>CLOB(1000 K)</TD>
<TD VALIGN="TOP">
<P>&nbsp;</TD>
</TR>
</TABLE>

<H2><A HREF="#TOC50"><A NAME="SEC50">TABLE6: BASIC6</A></A></H2>
<TABLE BORDER CELLSPACING=1 CELLPADDING=5 WIDTH=600>
<TR><TD WIDTH="29%" VALIGN="TOP">
<P>Column Name</TD>
<TD WIDTH="38%" VALIGN="TOP">
<P>Column Type</TD>
<TD WIDTH="31%" VALIGN="TOP">
<P>Column Description</TD>
</TR>
<TR><TD VALIGN="TOP">
<B><P>ID_6</B></TD>
<TD VALIGN="TOP">
<P>CHAR(15) NOT NULL</TD>
<TD VALIGN="TOP">
<P>PRIMARY KEY</TD>
</TR>
<TR><TD VALIGN="TOP">
<P>NAME</TD>
<TD VALIGN="TOP">
<P>VARCHAR(30)</TD>
<TD VALIGN="MIDDLE">
<P>&nbsp;</TD>
</TR>
<TR><TD VALIGN="TOP">
<P>AGE</TD>
<TD VALIGN="TOP">
<P>INTEGER</TD>
<TD VALIGN="MIDDLE">
<P>&nbsp;</TD>
</TR>
<TR><TD VALIGN="TOP">
<P>SALARY</TD>
<TD VALIGN="TOP">
<P>FLOAT</TD>
<TD VALIGN="TOP">
<P>&nbsp;</TD>
</TR>
<TR><TD VALIGN="TOP">
<P>PHOTO</TD>
<TD VALIGN="TOP">
<P>BLOB(1000 K)</TD>
<TD VALIGN="MIDDLE">
<P>&nbsp;</TD>
</TR>
</TABLE>

<H2><A HREF="#TOC51"><A NAME="SEC51">TABLE7: REGISTRY</A></A></H2>
<TABLE BORDER CELLSPACING=1 CELLPADDING=5 WIDTH=600>
<TR><TD WIDTH="33%" VALIGN="TOP">
<P>Column Name</TD>
<TD WIDTH="45%" VALIGN="TOP">
<P>Column Type</TD>
<TD WIDTH="22%" VALIGN="TOP">
<P>Column Description</TD>
</TR>
<TR><TD VALIGN="TOP">
<B><P>UID</B></TD>
<TD VALIGN="TOP">
<P>CHAR(15) NOT NULL</TD>
<TD VALIGN="TOP">
<P>PRIMARY KEY</TD>
</TR>
<TR><TD VALIGN="TOP">
<P>PASSWD</TD>
<TD VALIGN="TOP">
<P>CHAR(15)</TD>
<TD VALIGN="TOP">
<P>&nbsp;</TD>
</TR>
<TR><TD VALIGN="TOP">
<P>EMAIL</TD>
<TD VALIGN="TOP">
<P>CHAR(40)</TD>
<TD VALIGN="MIDDLE">
<P>&nbsp;</TD>
</TR>
<TR><TD VALIGN="TOP">
<P>ADDRESS</TD>
<TD VALIGN="TOP">
<P>CHAR(200)</TD>
<TD VALIGN="MIDDLE">
<P>&nbsp;</TD>
</TR>
<TR><TD VALIGN="TOP">
<P>PHONE</TD>
<TD VALIGN="TOP">
<P>CHAR(15)</TD>
<TD VALIGN="MIDDLE">
<P>&nbsp;</TD>
</TR>
</TABLE>

<H2><A HREF="#TOC52"><A NAME="SEC52">TABLE8: BID</A></A></H2>
<TABLE BORDER CELLSPACING=1 CELLPADDING=5 WIDTH=600>
<TR><TD WIDTH="32%" VALIGN="TOP">
<P>Column Name</TD>
<TD WIDTH="45%" VALIGN="TOP">
<P>Column Type</TD>
<TD WIDTH="23%" VALIGN="TOP">
<P>Column Description</TD>
</TR>
<TR><TD VALIGN="TOP">
<B><P>ItemID</B></TD>
<TD VALIGN="TOP">
<P>CHAR(15) NOT NULL</TD>
<TD VALIGN="TOP">
<P>FOREIGN KEY</TD>
</TR>
<TR><TD VALIGN="TOP">
<P>BIDERID</TD>
<TD VALIGN="TOP">
<P>CHAR(15)</TD>
<TD VALIGN="TOP">
<P>&nbsp;</TD>
</TR>
<TR><TD VALIGN="TOP">
<P>BID_PRICE</TD>
<TD VALIGN="TOP">
<P>FLOAT</TD>
<TD VALIGN="MIDDLE">
<P>&nbsp;</TD>
</TR>
<TR><TD VALIGN="TOP">
<P>BID_TIME</TD>
<TD VALIGN="TOP">
<P>DATE</TD>
<TD VALIGN="MIDDLE">
<P>&nbsp;</TD>
</TR>
</TABLE>

<H2><A HREF="#TOC53"><A NAME="SEC53">TABLE9: ITEM</A></A></H2>
<TABLE BORDER CELLSPACING=1 CELLPADDING=5 WIDTH=600>
<TR><TD WIDTH="33%" VALIGN="TOP">
<P>Column Name</TD>
<TD WIDTH="45%" VALIGN="TOP">
<P>Column Type</TD>
<TD WIDTH="22%" VALIGN="TOP">
<P>Column Description</TD>
</TR>
<TR><TD VALIGN="TOP">
<B><P>ITEM_ID</B></TD>
<TD VALIGN="TOP">
<P>CHAR(15) NOT NULL</TD>
<TD VALIGN="TOP">
<P>PRIMARY KEY</TD>
</TR>
<TR><TD VALIGN="TOP">
<P>SELLERID</TD>
<TD VALIGN="TOP">
<P>CHAR(15) NOT NULL</TD>
<TD VALIGN="MIDDLE">
<P>&nbsp;</TD>
</TR>
<TR><TD VALIGN="TOP">
<P>DESCRIPTION</TD>
<TD VALIGN="TOP">
<P>VARCHAR</TD>
<TD VALIGN="TOP">
<P>&nbsp;</TD>
</TR>
<TR><TD VALIGN="TOP">
<P>START_TIME</TD>
<TD VALIGN="TOP">
<P>DATE</TD>
<TD VALIGN="MIDDLE">
<P>&nbsp;</TD>
</TR>
<TR><TD VALIGN="TOP">
<P>END_TIME</TD>
<TD VALIGN="TOP">
<P>DATE</TD>
<TD VALIGN="MIDDLE">
<P>&nbsp;</TD>
</TR>
<TR><TD VALIGN="TOP">
<P>BID_PRICE</TD>
<TD VALIGN="TOP">
<P>FLOAT</TD>
<TD VALIGN="MIDDLE">
<P>&nbsp;</TD>
</TR>
<TR><TD VALIGN="TOP">
<P>BID_COUNT</TD>
<TD VALIGN="TOP">
<P>INTEGER</TD>
<TD VALIGN="MIDDLE">
<P>&nbsp;</TD>
</TR>
</TABLE>

<H1><A HREF="#TOC54"><A NAME="SEC54">Appendix B. Configuration File</A></A></H1>
<P>Users can use the configuration file to customize the working environment for DOTS. Various parameters are provided for users to control how test cases are running against a database server. </P>
<P>Detailed explanations for configuration parameters and their values are as follows: </P>

<UL>
<U><LI>Duration:</U> </LI></UL>

<P>Specify how long a test case in DOTS will run, in hours. The value of Duration ranges from one minute to any hours specified. Default is 24h hours. The format is hh:mm.<BR>
Sample: <I>DURATION = 24:00</I>The above sample means a duration of 24 hours. </P>

<UL>
<U><LI>Output Directory:</U> </LI></UL>

<P>Specify where a test case in DOTS stores its output, such as log files, error reports and test summaries. Default Output Directory is <I>/usr/local/DOTS/Output</I> while DOTS is installed in <I>/usr/local/DOTS</I> by default.<BR>
Sample: <I>LOG_DIR = /usr/local/DOTS/Output</I> The above sample will notify DOTS to generate output files (such as log files, error reports and test summaries) in <I>/usr/local/DOTS/Output</I> . </P>

<UL>
<U><LI>Concurrent Connections:</U> </LI></UL>

<P>Specify the concurrent database access connections will be created by a test case in DOTS if <I>AUTO_MODE = no</I>. The actual number of connections created will depend on the database settings.<BR>
Sample: <I>CONCURRENT_CONNECTIONS = 30</I> The above sample means at least 30 database access threads will be created to generate workload for a database system while a test case is running. </P>

<UL>
<U><LI>CPU Utilization Target:</U> </LI></UL>

<P>Specify the target level of CPU Utilization of Database Server while DOTS is running. If a test case cannot achieve this CPU Utilization target even when <I>ConcurrentConnections</I> of concurrent database connections are created, then more concurrent database access threads will be created to meet this target. Default is 75%. The value ranges from 75% to 100%.<BR>
Sample: <I>CPU_TARGET = 75 </I>The above sample means the bottom level for CPU Utilization of Database Server should be 75%. </P>

<UL>
<U><LI>Auto Mode:</U> </LI></UL>

<P>Specify whether to run the test automatically to have enough work load to meet the CPU utilization target. If set to "yes", DOTS will automatically add database access workload trying to meet the CPU utilization target. If set to "no", then DOTS starts the specified number of Connections.<BR>
Sample: <I>AUTO_MODE = yes</I> </P>

<UL>
<U><LI>Summary Interval:</U> </LI></UL>

<P>Specify the interval time between two writes of summary report to test summary file. The default is 30 minutes.<BR>
Sample: <I>SUMMARY_INTERVAL = 30</I> </P>

<UL>
<U><LI>Database Connection Parameters:</U> </LI></UL>

<P>Specify parameters needed to customize the database connection environment for a test case in DOTS, such as user id, password, etc. The number and content of parameters will vary for different test cases and will be specified in the design for each test case in DOTS.<BR>
Sample for DB2: </P>
<I><P>UserID = db2inst1</I> - User ID for connection<BR>
<I>Password = db2inst1</I> - Password for connection<I><BR>
DriverClass =Com.ibm.db2.jdbc.net.DB2Driver<BR>
URL = jdbc:db2://&lt;IP Address&gt;:8083/dotstest1</I> - URL for connection</P>
<P>Sample for PostgresSQL: </P>
<I><P>UserID = postgres</I> - User ID for connection<BR>
<I>Password = ""</I> - Password for connection<I><BR>
DriverClass = org.postgresql.Driver </I>/* CASE SENSITIVE*/<I><BR>
URL = jdbc:postgresql://&lt;IP Address&gt;/TESTDB </I>/* CASE SENSITIVE */ - URL for connection</P>

<UL>
<U><LI>Server IP Address:</U> </LI></UL>

<P>Specify the database server IP address.<BR>
Sample: <I>SERVER_IP = 10.10.10.1</P>

<UL>
</I><U><LI>Server Port:</U> </LI></UL>

<P>Specify the port that performance monitor uses. <BR>
Sample: <I>SERVER_PORT = 8001</I> </P>

<UL>
<U><LI>Max Rows:</U> </LI></UL>

<P>Specify the maximum rows a table can have. The default is 10,000.<BR>
Sample:<I> MAX_ROWS= 10000.</I> </P>

<UL>
<U><LI>Max Log File Size:</U> </LI></UL>

<P>Specify the maximum file size a log file can occupy. The default is 100M.<BR>
Sample:<I> MAX_LOGFILESIZE= 104857600.</I> </P>

<UL>
<U><LI>Thread Creation Interval:</U> </LI></UL>

<P>Specify the thread creation interval. The Default is 3 minutes, the maximum is 5 minutes, minimum is 1 minutes.<BR>
Sample:<I> CREATIONINTERVAL = 3.</I> </P>
<H1><A HREF="#TOC55"><A NAME="SEC55">Appendix C. Keyboard Control</A></A></H1>
<P>Users can stop execution of a test case in DOTS by entering predefined key combinations (then pressing the <I>enter</I> key) at any time from the console window in which the test case is running. All active threads within this test case will be terminated. Test cases running in other console windows will not be affected. </P>
<P>Sample: </P>
<P>The default is<I> STOP.</I> </P>
<H1><A HREF="#TOC56"><A NAME="SEC56">Appendix D. Output</A></A></H1>
<P>Output of a test case in DOTS includes log file, error report, test summary and screen status update. Users can obtain the comprehensive information from output files (log file, error report and test summary) of a test case in DOTS. </P>
<H2><A HREF="#TOC57"><A NAME="SEC57">D.1 Log File</A></A></H2>
<P>Test cases in DOTS record database access activities and database response information in Log File.</P>
<P>The log file is named as "CASE-timestamp(yyyy-mm-dd-hh-mm-ss-mmm).log ". </P>
<P>For example: The log file name may be like BTCJ4-2001-9-29-11-8-25-745.log.</P>
<P>Sample Parts of Log File: </P>
<P>[Sat Sep 29 11:08:25 EDT 2001] Database Opensource Test Suite V1.0<BR>
[Sat Sep 29 11:08:25 EDT 2001] Start to run JDBC API Test Case - BTCJ4<BR>
[Sat Sep 29 11:08:25 EDT 2001] Initialization started<BR>
[Sat Sep 29 11:08:25 EDT 2001] Starting Performance Monitor client ...OK<BR>
[Sat Sep 29 11:08:25 EDT 2001] Client Socket: Socket[addr=&lt;server machine's name&gt;/&lt;server machine's IP&gt;,port=8001,localport=2592]<BR>
[Sat Sep 29 11:08:41 EDT 2001] Testing Database Connections ...OK<BR>
[Sat Sep 29 11:08:41 EDT 2001] Starting Summary Writer ... OK<BR>
[Sat Sep 29 11:08:41 EDT 2001] Starting Keyboard Thread ... OK<BR>
[Sat Sep 29 11:08:49 EDT 2001] Active Threads = 1 Average CPU Usage = 22%<BR>
[Sat Sep 29 11:09:49 EDT 2001] Active Threads = 1 Average CPU Usage = 10%<BR>
[Sat Sep 29 11:10:49 EDT 2001] Active Threads = 1 Average CPU Usage = 18%<BR>
[Sat Sep 29 11:11:45 EDT 2001] 3 Minutes Average CPU Usage = 13%<BR>
[Sat Sep 29 11:11:50 EDT 2001] Active Threads = 2 Average CPU Usage = 19%<BR>
[Sat Sep 29 11:12:50 EDT 2001] Active Threads = 2 Average CPU Usage = 33%<BR>
[Sat Sep 29 11:13:50 EDT 2001] Active Threads = 2 Average CPU Usage = 41%<BR>
[Sat Sep 29 11:14:45 EDT 2001] 3 Minutes Average CPU Usage = 35%<BR>
[Sat Sep 29 11:14:50 EDT 2001] Active Threads = 3 Average CPU Usage = 41%<BR>
[Sat Sep 29 11:15:51 EDT 2001] Active Threads = 3 Average CPU Usage = 57%<BR>
[Sat Sep 29 11:16:51 EDT 2001] Active Threads = 3 Average CPU Usage = 56%<BR>
[Sat Sep 29 11:17:46 EDT 2001] 3 Minutes Average CPU Usage = 56%<BR>
[Sat Sep 29 11:17:51 EDT 2001] Active Threads = 4 Average CPU Usage = 63%<BR>
[Sat Sep 29 11:18:51 EDT 2001] Active Threads = 4 Average CPU Usage = 72%<BR>
[Sat Sep 29 11:19:51 EDT 2001] Active Threads = 4 Average CPU Usage = 79%<BR>
[Sat Sep 29 11:20:47 EDT 2001] 3 Minutes Average CPU Usage = 76%<BR>
[Sat Sep 29 11:20:47 EDT 2001] CPU Target 75% is achieved now.<BR>
[Sat Sep 29 11:20:52 EDT 2001] Active Threads = 4 Average CPU Usage = 82%<BR>
[Sat Sep 29 11:21:52 EDT 2001] Active Threads = 4 Average CPU Usage = 88%<BR>
[Sat Sep 29 11:22:52 EDT 2001] Active Threads = 4 Average CPU Usage = 90%<BR>
[Sat Sep 29 11:23:52 EDT 2001] Active Threads = 4 Average CPU Usage = 91%<BR>
[Sat Sep 29 11:24:52 EDT 2001] Active Threads = 4 Average CPU Usage = 92%<BR>
[Sat Sep 29 11:25:47 EDT 2001] 5 Minutes Average CPU Usage = 86%<BR>
<I>. . . . . . </I><BR>
<I>. . . . . . </I><BR>
[Sat Sep 29 19:17:30 EDT 2001] Dots is Terminating ...<BR>
[Sat Sep 29 19:17:30 EDT 2001] Writing summary to Summary File...</P>
<H2><A HREF="#TOC58"><A NAME="SEC58">D.2 Error Report</A></A></H2>
<P>Test Cases in DOTS record error messages received from the Database in Error Report. </P>
<P>The error file is named as "CASE-timestamp(yyyy-mm-dd-hh-mm-ss-mmm).err ". </P>
<P>For example: The error file name may be like BTCJ3-2001-07-06-09-10-20-332.err.</P>
<P>Sample Parts of Error Report: </P>
<P>[Thu Aug 23 10:17:44 CST 2001] BTCJ3.populateTables() java.sql.BatchUpdateException: [IBM][CLI Driver][DB2/LINUX] SQL0803N One or more values in the INSERT statement, UPDATE statement, or foreign key update caused by a DELETE statement are not valid because the primary key, unique constraint or unique index identified by "1" constrains table "DB2INST1.BASIC1" from having duplicate rows for those columns. SQLSTATE=23505 </P>
<H2><A HREF="#TOC59"><A NAME="SEC59">D.3 Test Summary</A></A></H2>
<P>Test Cases in DOTS record summary and statistic information of a test case execution in Test Summary.</P>
<P>The summary file is named as "CASE-timestamp(yyyy-mm-dd-hh-mm-ss-mmm).sum". </P>
<P>For example: The summary file name may be like BTCJ4-2001-9-29-11-8-25-745.sum.</P>
<P>Sample Parts of Test Summary: </P>
<P>[Sat Sep 29 11:08:25 EDT 2001] Start to run JDBC API Test Case - BTCJ4<BR>
[Sat Sep 29 11:08:25 EDT 2001] The Linux Kernel Version is 2.4.4-64GB-SMP<BR>
[Sat Sep 29 11:08:25 EDT 2001] The Database Server's CPU Count is 8<BR>
[Sat Sep 29 11:28:41 EDT 2001]<BR>
&lt;Total Execution Time&gt; 0 hours 20 minutes.<BR>
<BR>
&lt;Current Concurrent DB Connections&gt; 4.<BR>
<BR>
&lt;JDBC APIs&gt; Total number of QUERY 28523.<BR>
Total number of UPDATE 12655.<BR>
Total number of INSERT 34223.<BR>
Total number of DELETE 0.<BR>
Total number of FAILED 0.<BR>
<BR>
&lt;Average CPU&gt; Peak of this Interval: 97%<BR>
Average of this Interval: 61%<BR>
Peak of all: 97%<BR>
Average of all: 61%<BR>
<BR>
&lt;CPU0&gt; Peak of this Interval: 99%<BR>
Average of this Interval: 62%<BR>
Peak of all: 99%<BR>
Average of all: 62%<BR>
<BR>
&lt;CPU1&gt; Peak of this Interval: 98%<BR>
Average of this Interval: 61%<BR>
Peak of all: 98%<BR>
Average of all: 61%<BR>
<I>. . . . . . </I><BR>
<I>. . . . . . </I><BR>
&lt;CPU7&gt; Peak of this Interval: 97%<BR>
Average of this Interval: 61%<BR>
Peak of all: 97%<BR>
Average of all: 61%<BR>
<BR>
&lt;Memory&gt; Peak of this Interval: 752M<BR>
Average of this Interval: 675M<BR>
Peak of all: 752M<BR>
Average of all: 675M<BR>
<BR>
&lt;Disk IO&gt; Peak of this Interval: 305/s<BR>
Average of this Interval: 207/s<BR>
Peak of all: 305/s<BR>
Average of all: 207/s<BR>
<BR>
&lt;Page In&gt; Peak of this Interval: 124/s<BR>
Average of this Interval: 1/s<BR>
Peak of all: 124/s<BR>
Average of all: 1/s<BR>
<BR>
&lt;Page Out&gt; Peak of this Interval: 20896/s<BR>
Average of this Interval: 1019/s<BR>
Peak of all: 20896/s<BR>
Average of all: 1019/s<BR>
<BR>
<I>. . . . . . <BR>
</I><BR>
[Sat Sep 29 19:17:30 EDT 2001] Waiting for the active threads to exit ......<BR>
[Sat Sep 29 19:17:30 EDT 2001] All Database Access Threads exit.</P></BODY>
</HTML>
