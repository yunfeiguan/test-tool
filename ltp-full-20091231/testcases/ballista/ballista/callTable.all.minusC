# callTable.all: function definition file used by Ballista
# Copyright (C) 1998-2001  Carnegie Mellon University
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

#------------------------------------------------------------------------
#Calltable file
#This file is ported to Digital UNIX 4.0
#The file format is as follows
#
# include file name  callType  return type  function name  ballista type
#
# callType can be:
# constructor   -   puts a new before method name ie: result = new widget;
# function - normal function
#------------------------------------------------------------------------

syscall.h	function	int nfsservctl b_int b_ptr_void b_ptr_void 
grp.h		function	int getgroups b_int b_ptr_gid_t
grp.h		function	int setgroups b_unsigned_long b_ptr_gid_t
unistd.h	function	int getdents b_unsigned_int b_ptr_void b_unsigned_int
unistd.h	function	int bdflush b_int b_ptr_long
unistd.h	function	int bdflush b_int b_long
unistd.h	function	int exit b_int
unistd.h	function	int mount b_ptr_buf b_ptr_buf b_ptr_buf
unistd.h	function	int umount b_ptr_buf b_int
unistd.h        function	int nice b_int
unistd.h	function	int chroot b_ptr_buf
unistd.h	function	int readlink b_ptr_buf b_ptr_char b_int
unistd.h	function	int uselib b_ptr_char
unistd.h	function	int swapon b_ptr_char b_int
unistd.h	function	int swapoff b_ptr_char
unistd.h	function	int reboot b_int b_int b_int b_ptr_void
sys/mman.h	function	int mumap b_ptr_void b_unsigned_long
unistd.h	function	int fchown b_int b_pid b_pid
unistd.h	function	int fsync b_fd
unistd.h	function	int sigreturn b_unsigned_long

	

unistd.h	function	int    getresgid  b_ptr_gid_t b_ptr_gid_t b_ptr_gid_t
unistd.h        function        int    ioperm b_unsigned_long b_unsigned_long b_int
unistd.h        function        int    ipc b_unsigned_int b_int b_int b_int b_ptr_void b_long
sys/file.h      function        int     flock b_fd b_int
sys/mman.h      function        void*    mremap b_ptr_void b_unsigned_long b_unsigned_long b_unsigned_long
sys/socket.h        function       ssize_t send b_int b_ptr_void b_unsigned_long b_int

# from LTP
unistd.h        function        int     acct    b_fname
unistd.h        function        int   setfsgid b_pid
unistd.h        function        int   setfsuid b_pid
unistd.h        function        int     brk     b_ptr_void
#unistd.h       function        int     b_unsigned_int b_unsigned_long b_unsigned_long b_unsigned_int
sys/socket.h        function        size_t recv b_int b_ptr_void b_unsigned_long b_int
sys/socket.h        function        size_t recvfrom b_int b_ptr_void b_unsigned_long b_int
sys/syscall.h       function        int syscall b_int    
unistd.h            function        int sysfs b_int b_unsigned_int b_int	


unistd.h        function        size_t  confstr  b_int b_ptr_char b_unsigned_long
unistd.h	function	int	fchdir	 b_fd
unistd.h	function	int     getdomainname   b_ptr_char b_unsigned_long
unistd.h	function	int     setdomainname	b_fname    b_unsigned_long
unistd.h	function        long    sethostid   b_long
unistd.h	function	int     gethostname     b_ptr_char b_unsigned_long
unistd.h	function	int     sethostname	b_fname    b_unsigned_long
unistd.h	function	pid_t   getsid	 b_pid
unistd.h	function	pid_t   getpgid  b_pid 
unistd.h	function	int     setpgid  b_pid b_pid
unistd.h	function	int     lstat  b_fname b_ptr_stat
unistd.h	function	int     modify_ldt  b_int b_ptr_void b_unsigned_long
#unistd.h	function	int     getresgid  b_gid_ptr b_gid_ptr b_gid_ptr
unistd.h	function	int     profil   b_ptr_unsigned_int  b_unsigned_long b_unsigned_long b_unsigned_int


# grp.h            function       struct group getgrnam b_fname


sys/io.h        function        int     iopl  b_int
sys/socket.h    function        int     listen  b_int b_int
sys/time.h      function        int     getpriority   b_int b_int
sys/resource.h  function 	int     setpriority   b_int b_int b_int 
sys/prctl.h     function 	int     prctl b_int b_unsigned_long b_unsigned_long b_unsigned_long b_unsigned_long



#files:
unistd.h	function	int	access	b_fname	b_int_amode
unistd.h	function	int	chdir	b_fname
sys/stat.h	function	int	chmod	b_fname	b_mode_t
sys/types.h	function	int	chown	b_fname	b_id	b_id
unistd.h	function	int	close	b_fd
fcntl.h	function	int	creat	b_fname	b_mode_t
unistd.h	function	int	dup	b_fd
unistd.h	function	int	dup2	b_fd	b_fd
sys/stat.h	function	int	fchmod	b_fd	b_mode_t
fcntl.h	function	int	fcntl	b_fd	b_int	b_int
unistd.h	function	int	fdatasync	b_fd
sys/stat.h	function	int	fstat	b_fd	b_ptr_stat
unistd.h	function	int	fsync	b_fd
unistd.h	function	int	ftruncate	b_fd	b_long
unistd.h	function	char*	getcwd	b_ptr_char	b_int
unistd.h	function	int	link	b_fname	b_fname
unistd.h	function	off_t	lseek	b_fd	b_long	b_int_whence
sys/stat.h	function	int	mkdir	b_fname	b_mode_t
sys/stat.h	function	int	mkfifo	b_fname	b_mode_t
fcntl.h	function	int	open	b_fname	b_oflag
fcntl.h	function	int	open	b_fname	b_oflag	b_mode_t
unistd.h	function	ssize_t	read	b_fd	b_ptr_buf	b_int
unistd.h	function	int	rename	b_fname	b_fname
unistd.h	function	int	rmdir	b_fname
sys/stat.h	function	int	stat	b_fname	b_ptr_stat
sys/stat.h	function	mode_t	umask	b_mode_t
unistd.h	function	int	unlink	b_fname
unistd.h	function	ssize_t	write	b_fd	b_ptr_char	b_int
utime.h	function	int	utime	b_fname	b_ptr_utimbuf

#dir:
dirent.h	function	int	closedir	b_ptr_dir
dirent.h	function	DIR*	opendir	b_fname
dirent.h	function	dirent*	readdir	b_ptr_dir
dirent.h	function	void	rewinddir	b_ptr_dir

#processes:
unistd.h	function	int	execl	b_fname	b_ptr_char
unistd.h	function	int	execl	b_fname	b_ptr_char	b_ptr_char
unistd.h	function	int	execle	b_fname	b_ptr_char
unistd.h	function	int	execle	b_fname	b_ptr_char	b_ptr_char
unistd.h	function	int	execlp	b_fname	b_ptr_char
unistd.h	function	int	execlp	b_fname	b_ptr_char	b_ptr_char
unistd.h	function	int	execv	b_fname	b_ptr_ptr_char
unistd.h	function	int	execve	b_fname	b_ptr_ptr_char	b_ptr_ptr_char
unistd.h	function	int	execvp	b_fname	b_ptr_ptr_char
#unistd.h	function	int	pipe	b_ptr_int       #pipe intentionally left off the list
sys/wait.h	function	pid_t	wait	b_ptr_int
sys/wait.h	function	pid_t	waitpid	b_pid	b_ptr_int	b_waitopt

#pid:
sys/types.h	function	int	getgroups	b_int	b_ptr_gid_t
sys/types.h	function	int	setgid	b_pid
sys/types.h	function	int	setpgid	b_pid	b_pid
sys/types.h	function	int	setuid	b_pid

#signals:
unistd.h	function	int	alarm	b_int
signal.h	int	kill	b_pid	b_int	# sends a SIGHUP to all procs in proc grp
signal.h	function	int	sigaction	b_signal	b_ptr_sigaction	b_ptr_sigaction
signal.h	function	int	sigaddset	b_ptr_sigset_t	b_signal
signal.h	function	int	sigdelset	b_ptr_sigset_t	b_signal
signal.h	function	int	sigemptyset	b_ptr_sigset_t
signal.h	function	int	sigfillset	b_ptr_sigset_t
signal.h	function	int	sigismember	b_ptr_sigset_t	b_signal
signal.h	function	int	sigpending	b_ptr_sigset_t
signal.h	function	int	sigprocmask	b_sig_how	b_ptr_sigset_t	b_ptr_sigset_t
#signal	int	sigqueue	b_pid	b_signal	b_ptr_char	# same reason as kill()
signal.h	int	sigsuspend	b_ptr_sigset_t	#inflated restarts
#sigwaitinfo and sigtimedwait comment out as correct operation would be counted as Restarts
#uncomment to check for Catastrophics
signal.h	function	int	sigtimedwait	b_ptr_sigset_t	b_ptr_siginfo_t	b_ptr_timespec
signal.h	function	int	sigwaitinfo	b_ptr_sigset_t	b_ptr_siginfo_t

#termio: 
termios.h	function	speed_t	cfgetispeed	b_ptr_termios
termios.h	function	speed_t	cfgetospeed	b_ptr_termios
termios.h	function	int	cfsetispeed	b_ptr_termios	b_unsigned_int
termios.h	function	int	cfsetospeed	b_ptr_termios	b_unsigned_int
termios.h	function	int	tcdrain	b_fd
termios.h	function	int	tcflow	b_fd	b_int   # restart inflated
termios.h	function	int	tcflush	b_fd	b_int_tc
termios.h	function	int	tcgetattr	b_fd	b_ptr_termios
termios.h	function	int	tcsendbreak	b_fd	b_int
termios.h	function	int	tcsetattr	b_fd	b_int_tc	b_ptr_termios
sys/types.h	function	pid_t	tcgetpgrp	b_fd
#sys/types.h	function	int	tcsetpgrp	b_fd	b_pid  #suspend ttyoutput

#jumps:
setjmp.h	function	void	longjmp	b_jmp_buf	b_int
setjmp.h	function	int	setjmp	b_jmp_buf
setjmp.h	function	void	siglongjmp	b_jmp_buf	b_int
setjmp.h	function	int	sigsetjmp	b_jmp_buf	b_int

#misc:
assert.h	function	void	assert	#inflate the abort percentages
locale.h	function	char*	setlocale	b_int_category	b_ptr_char
stdio.h	function	void	perror	b_ptr_char
time.h	function	time_t	time	b_ptr_time_t
sys/times.h	function	clock_t	times	b_ptr_tms
stdio.h	function	char*	ctermid	b_ptr_char
unistd.h	function	int	isatty	b_fd
unistd.h	function	char*	ttyname	b_fd
sys/utsname.h	function	int	uname	b_ptr_utsname
unistd.h	function	int	fpathconf	b_fd	b_int_file_var
unistd.h	function	int	pathconf	b_fname	b_int_file_var
unistd.h	function	long	sysconf	b_int_sys_var
stdlib.h	function	char*	getenv	b_ptr_char
grp.h	function	group*	getgrgid	b_id
grp.h	function	group*	getgrnam	b_ptr_char_id
pwd.h	function	passwd*	getpwnam	b_ptr_char_id
pwd.h	function	passwd*	getpwuid	b_id
sys/socket.h	function	int socketpair b_int b_int b_int b_ptr_int
time.h function int stime b_ptr_time_t
unistd.h	function	int symlink b_fname b_fname




#timers:
time.h	function	int	clock_gettime	b_clockid	b_ptr_timespec
time.h	function	int	clock_settime	b_clockid	b_ptr_timespec
time.h	function	int	clock_getres	b_clockid	b_ptr_timespec
#ZEROtime.h	function	clock_t	clock #ZERO calling arguments
time.h	function	double	difftime	b_time_t	b_time_t
time.h	function	int	timer_create	b_clockid	b_ptr_sigevent	b_ptr_int  
#time.h	function	int	timer_create	b_clockid	b_ptr_sigevent	b_ptr_long  #ALPHA version
#time.h	function	int	timer_create	b_clockid	b_ptr_sigevent	b_ptr_int   #LINUX/SUN version
time.h	function	int	timer_delete	b_timer
time.h	function	int	timer_settime	b_timer	b_timer	b_ptr_itimerspec	b_ptr_itimerspec
time.h	function	int	timer_gettime	b_timer		b_ptr_itimerspec
time.h	function	int	timer_getoverrun	b_timer
time.h	function	int	nanosleep	b_ptr_timespec	b_ptr_timespec

#memory
#munlockall no call arguments
sys/mman.h	function	int 	mlockall	b_mcl_flag
sys/mman.h	function	int	mlock	b_ptr_void	b_unsigned_long
sys/mman.h	function	int	munlock	b_ptr_void	b_unsigned_long
sys/mman.h	function	void*	mmap	b_ptr_void	b_unsigned_long	b_prot_flag	b_map_flag	b_fd	b_int
#note mmap probably should be tested on shared memory w/ b_fd
sys/mman.h	function	int	munmap	b_ptr_void	b_unsigned_long
sys/mman.h	function	int	mprotect	b_ptr_void	b_unsigned_long	b_prot_flag
sys/mman.h	function	int	msync	b_ptr_void	b_unsigned_long	b_ms_flag
sys/mman.h	function	int	shm_open	b_fname	b_oflag	b_mode_t
sys/mman.h	function	int 	shm_unlink	b_fname
#note shm_* should probably also try names that start with /


#sched:
sched.h	function	int	sched_setparam	b_pid	b_ptr_sched_param
sched.h	function	int	sched_getparam	b_pid	b_ptr_sched_param
sched.h	function	int	sched_setscheduler	b_pid	b_sched_policy	b_ptr_sched_param
sched.h	function	int	sched_getscheduler	b_pid
#sched.h	function	int	sched_yield    #no calling arguments
sched.h	function	int	sched_get_priority_max	b_sched_policy
sched.h	function	int	sched_get_priority_min	b_sched_policy
sched.h	function	int	sched_rr_get_interval	b_pid	b_ptr_timespec

#semaphore
semaphore.h	function	int	sem_init	b_ptr_sem_t	b_int	b_unsigned_int
semaphore.h	function	int	sem_destroy	b_ptr_sem_t
semaphore.h	function	sem_t*	sem_open	b_fname	b_oflag
semaphore.h	function	int	sem_close	b_ptr_sem_t
semaphore.h	function	int	sem_unlink	b_fname
semaphore.h	function	int	sem_wait	b_ptr_sem_t
semaphore.h	function	int	sem_trywait	b_ptr_sem_t
semaphore.h	function	int	sem_post	b_ptr_sem_t
semaphore.h	function	int	sem_getvalue	b_ptr_sem_t	b_ptr_int

#aio
aio.h	function	int	aio_read	b_ptr_aiocb
aio.h	function	int	aio_write	b_ptr_aiocb
#aio.h   function        int     lio_listio      b_aio_mode      b_ptr_ptr_aiocb b_int   b_ptr_sigevent
aio.h	function	int	aio_error	b_ptr_aiocb
aio.h	function	ssize_t	aio_return	b_ptr_aiocb
aio.h	function	int	aio_cancel	b_fd	b_ptr_aiocb
aio.h	function	int	aio_suspend	b_ptr_ptr_aiocb	b_int	b_ptr_timespec
aio.h	function	int	aio_fsync	b_oflag	b_ptr_aiocb

